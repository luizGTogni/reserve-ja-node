generator client {
    provider = "prisma-client-js"
    output   = "../src/generated/prisma"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum UserRole {
    ADMIN
    HOST
    GUEST
}

model User {
    id            String   @id @default(uuid())
    name          String
    email         String   @unique
    password_hash String
    role          UserRole @default(GUEST)
    created_at    DateTime @default(dbgenerated("now()"))
    updated_at    DateTime @default(dbgenerated("now()")) @updatedAt

    property Property[]
    Booking  Booking[]

    @@map("users")
}

enum RefundPolicy {
    TOTAL
    PARCIAL
}

model Property {
    id            String       @id @default(nanoid())
    title         String
    description   String
    latitude      Decimal
    longitude     Decimal
    price_base    Decimal
    capacity      Int
    refund_policy RefundPolicy @default(TOTAL)
    created_at    DateTime     @default(now())
    updated_at    DateTime     @default(now()) @updatedAt

    host              User                @relation(fields: [host_id], references: [id])
    host_id           String
    PropertyToAmenity PropertyToAmenity[]
    Booking           Booking[]

    @@map("properties")
}

model PropertyToAmenity {
    property_id String
    amenity_id  String

    property Property @relation(fields: [property_id], references: [id])
    amenity  Amenity  @relation(fields: [amenity_id], references: [id])

    @@id([property_id, amenity_id])
    @@map("property_amenities")
}

model Amenity {
    id                String              @id @default(uuid())
    title             String              @unique
    description       String?
    PropertyToAmenity PropertyToAmenity[]

    @@map("amenities")
}

enum StatusBooking {
    PENDING
    CONFIRMED
    CANCELED
    COMPLETED
}

model Booking {
    id           String        @id @default(uuid())
    checkin_at   DateTime
    checkout_at  DateTime
    number_guest Int
    value_base   Decimal
    value_guest  Decimal
    value_host   Decimal
    value_tax    Decimal
    platform_fee Decimal
    status       StatusBooking @default(PENDING)
    user_id      String
    property_id  String

    user     User     @relation(fields: [user_id], references: [id])
    property Property @relation(fields: [property_id], references: [id])

    @@map("bookings")
}
